[{"/workspace/project_mern_memories/client/src/index.js":"1","/workspace/project_mern_memories/client/src/app.js":"2","/workspace/project_mern_memories/client/src/components/form/form.js":"3","/workspace/project_mern_memories/client/src/components/employees/employees.js":"4","/workspace/project_mern_memories/client/src/components/employees/employee/employee.js":"5","/workspace/project_mern_memories/client/src/styles.js":"6","/workspace/project_mern_memories/client/src/components/form/css.js":"7","/workspace/project_mern_memories/client/src/components/employees/css.js":"8","/workspace/project_mern_memories/client/src/components/employees/employee/css.js":"9","/workspace/project_mern_memories/client/src/reducers/employees.js":"10","/workspace/project_mern_memories/client/src/actions/employees.js":"11","/workspace/project_mern_memories/client/src/api/index.js":"12","/workspace/project_mern_memories/client/src/reducers/index.js":"13","/workspace/project_mern_memories/client/src/Utilities.js":"14"},{"size":577,"mtime":1606898033000,"results":"15","hashOfConfig":"16"},{"size":1164,"mtime":1606743864000,"results":"17","hashOfConfig":"16"},{"size":3260,"mtime":1606897802089,"results":"18","hashOfConfig":"16"},{"size":867,"mtime":1606747432000,"results":"19","hashOfConfig":"16"},{"size":1644,"mtime":1606747517000,"results":"20","hashOfConfig":"16"},{"size":350,"mtime":1606654250500,"results":"21","hashOfConfig":"16"},{"size":364,"mtime":1606896314349,"results":"22","hashOfConfig":"16"},{"size":265,"mtime":1606654662000,"results":"23","hashOfConfig":"16"},{"size":962,"mtime":1606654758000,"results":"24","hashOfConfig":"16"},{"size":718,"mtime":1607156436837,"results":"25","hashOfConfig":"16"},{"size":1052,"mtime":1606732111385,"results":"26","hashOfConfig":"16"},{"size":411,"mtime":1606729261967,"results":"27","hashOfConfig":"16"},{"size":135,"mtime":1606655702014,"results":"28","hashOfConfig":"16"},{"size":683,"mtime":1607155888079,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bqnuqy",{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/workspace/project_mern_memories/client/src/index.js",[],"/workspace/project_mern_memories/client/src/app.js",["60","61"],"import React from 'react';\nimport { useDispatch } from 'react-redux';\n\n\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\nimport Posts from './components/employees/employees';\nimport Form from './components/form/form';\nimport { getEmployees } from './actions/employees';\nimport pageStyles from './styles';\nimport logo from './assets/images/logo.png';\n\n\nconst App = () => {\n\nconst classes = pageStyles();\nconst dispatch = useDispatch();\n\n  return (\n        <Container maxWidth=\"lg\">\n      <AppBar className={classes.AppBar} position=\"static\" color=\"inherit\">\n        <Typography className={classes.heading} variant=\"h2\" align=\"center\"></Typography>\n        <img className={classes.image} src={logo} alt=\"icon\" height=\"300\" width=\"300\"/>\n      </AppBar>\n      <Grow in>\n        <Container>\n          <Grid container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\n            <Grid item xs={12} sm={4}>\n              <Form />\n            </Grid>\n            <Grid item xs={12} sm={7}>\n              <Posts />\n            </Grid>\n          </Grid>\n        </Container>\n      </Grow>\n    </Container>\n  );\n};\n\nexport default App;","/workspace/project_mern_memories/client/src/components/form/form.js",["62","63"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TextField, Button, Typography, Paper, Select, InputLabel, MenuItem } from '@material-ui/core';\nimport pageStyles from './css';\nimport styled from 'styled-components'\nimport { createEmployee } from '../../actions/employees';\n\nconst StyledButton = styled(({...rest}) => (\n  <Button classes={{label: 'label'}} {...rest}/>\n))`\n  background: transparent;\n  border-radius: 3px;\n  width: 100%;\n  padding: 20px;\n  margin-bottom: 10px;\n  color: #5600ff;\n  border: 3px solid;\n  &:hover {\n    background-color: #5600ff;\n    color: #fff;\n`\n\n\nconst Form = () => {\n\n\n  const [employeeData, setEmployeeData] = useState({ name: '', dateOfBirth: '', gender: '', salary: '', speciality: ''});\n//   const employee = useSelector((state) => (currentId ? state.employees.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = pageStyles();\n\n//   useEffect(() => {\n//     if (employee) setEmployeeData(employee);\n//   }, [employee]);\n\n \n  const clear = () => {\n    // setCurrentId(0);\n    setEmployeeData({ name: '', dateOfBirth: '', gender: '', salary: '', speciality: '' });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n      dispatch(createEmployee(employeeData));\n    //   clear();\n    //   dispatch(updateEmployee(currentId, employeeData));\n    //   clear();\n  };\n\n    return (\n            <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">Creating a New Employee</Typography>\n        <TextField name=\"name\" variant=\"outlined\" label=\"name\" fullWidth value={employeeData.name} onChange={(e) => setEmployeeData({ ...employeeData, name: e.target.value })} />\n        <TextField name=\"title\" variant=\"outlined\" label=\"Date Of birth\" fullWidth value={employeeData.dateOfBirth} onChange={(e) => setEmployeeData({ ...employeeData, dateOfBirth: e.target.value })} />  \n        <InputLabel id=\"gender-outlined-label\">Gender</InputLabel>\n        <Select\n          labelId=\"gender-outlined-label\"\n          id=\"demo-simple-select\"\n          variant=\"outlined\"\n          fullWidth\n         value={employeeData.gender}\n         onChange={(e) => setEmployeeData({ ...employeeData, gender: e.target.value })}\n        >\n          <MenuItem value={\"Male\"}>Male</MenuItem>\n          <MenuItem value={\"Female\"}>Female</MenuItem>\n        </Select>\n\n        <TextField name=\"Salary\" variant=\"outlined\" label=\"Salary\" fullWidth value={employeeData.salary} onChange={(e) => setEmployeeData({ ...employeeData, salary: e.target.value })} />\n        <TextField name=\"speciality\" variant=\"outlined\" label=\"speciality (coma separated)\" fullWidth value={employeeData.speciality} onChange={(e) => setEmployeeData({ ...employeeData, speciality: e.target.value.split(',') })} />\n        <StyledButton className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</StyledButton>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n    )\n}\n\nexport default Form;","/workspace/project_mern_memories/client/src/components/employees/employees.js",["64"],"/workspace/project_mern_memories/client/src/components/employees/employee/employee.js",["65"],"/workspace/project_mern_memories/client/src/styles.js",[],"/workspace/project_mern_memories/client/src/components/form/css.js",[],"/workspace/project_mern_memories/client/src/components/employees/css.js",[],"/workspace/project_mern_memories/client/src/components/employees/employee/css.js",[],"/workspace/project_mern_memories/client/src/reducers/employees.js",["66"],"/workspace/project_mern_memories/client/src/actions/employees.js",[],"/workspace/project_mern_memories/client/src/api/index.js",[],"/workspace/project_mern_memories/client/src/reducers/index.js",[],"/workspace/project_mern_memories/client/src/Utilities.js",[],{"ruleId":"67","severity":1,"message":"68","line":8,"column":10,"nodeType":"69","messageId":"70","endLine":8,"endColumn":22},{"ruleId":"67","severity":1,"message":"71","line":16,"column":7,"nodeType":"69","messageId":"70","endLine":16,"endColumn":15},{"ruleId":"67","severity":1,"message":"72","line":1,"column":27,"nodeType":"69","messageId":"70","endLine":1,"endColumn":36},{"ruleId":"67","severity":1,"message":"73","line":2,"column":23,"nodeType":"69","messageId":"70","endLine":2,"endColumn":34},{"ruleId":"67","severity":1,"message":"74","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},{"ruleId":"67","severity":1,"message":"74","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"76","line":5,"column":1,"nodeType":"77","endLine":18,"endColumn":3},"no-unused-vars","'getEmployees' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'react' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration"]