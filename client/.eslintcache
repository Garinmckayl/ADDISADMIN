[{"/workspace/project_mern_memories/client/src/index.js":"1","/workspace/project_mern_memories/client/src/app.js":"2","/workspace/project_mern_memories/client/src/components/form/form.js":"3","/workspace/project_mern_memories/client/src/components/employees/employees.js":"4","/workspace/project_mern_memories/client/src/components/employees/employee/employee.js":"5","/workspace/project_mern_memories/client/src/styles.js":"6","/workspace/project_mern_memories/client/src/components/form/css.js":"7","/workspace/project_mern_memories/client/src/components/employees/css.js":"8","/workspace/project_mern_memories/client/src/components/employees/employee/css.js":"9","/workspace/project_mern_memories/client/src/reducers/employees.js":"10","/workspace/project_mern_memories/client/src/actions/employees.js":"11","/workspace/project_mern_memories/client/src/api/index.js":"12","/workspace/project_mern_memories/client/src/reducers/index.js":"13","/workspace/project_mern_memories/client/src/Utilities.js":"14","/workspace/project_mern_memories/client/src/rootSaga.js":"15","/workspace/project_mern_memories/client/src/sagas.js":"16"},{"size":644,"mtime":1607158958000,"results":"17","hashOfConfig":"18"},{"size":1164,"mtime":1606743864000,"results":"19","hashOfConfig":"18"},{"size":3260,"mtime":1606897802089,"results":"20","hashOfConfig":"18"},{"size":867,"mtime":1606747432000,"results":"21","hashOfConfig":"18"},{"size":1644,"mtime":1606747517000,"results":"22","hashOfConfig":"18"},{"size":350,"mtime":1606654250500,"results":"23","hashOfConfig":"18"},{"size":364,"mtime":1606896314000,"results":"24","hashOfConfig":"18"},{"size":265,"mtime":1606654662000,"results":"25","hashOfConfig":"18"},{"size":962,"mtime":1606654758000,"results":"26","hashOfConfig":"18"},{"size":718,"mtime":1607156436000,"results":"27","hashOfConfig":"18"},{"size":1096,"mtime":1607158969000,"results":"28","hashOfConfig":"18"},{"size":411,"mtime":1606729261000,"results":"29","hashOfConfig":"18"},{"size":135,"mtime":1606655702014,"results":"30","hashOfConfig":"18"},{"size":683,"mtime":1607155888000,"results":"31","hashOfConfig":"18"},{"size":164,"mtime":1607159393000,"results":"32","hashOfConfig":"18"},{"size":553,"mtime":1607675718561,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1bqnuqy",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/workspace/project_mern_memories/client/src/index.js",[],["72","73"],"/workspace/project_mern_memories/client/src/app.js",["74","75"],"import React from 'react';\nimport { useDispatch } from 'react-redux';\n\n\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\nimport Posts from './components/employees/employees';\nimport Form from './components/form/form';\nimport { getEmployees } from './actions/employees';\nimport pageStyles from './styles';\nimport logo from './assets/images/logo.png';\n\n\nconst App = () => {\n\nconst classes = pageStyles();\nconst dispatch = useDispatch();\n\n  return (\n        <Container maxWidth=\"lg\">\n      <AppBar className={classes.AppBar} position=\"static\" color=\"inherit\">\n        <Typography className={classes.heading} variant=\"h2\" align=\"center\"></Typography>\n        <img className={classes.image} src={logo} alt=\"icon\" height=\"300\" width=\"300\"/>\n      </AppBar>\n      <Grow in>\n        <Container>\n          <Grid container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\n            <Grid item xs={12} sm={4}>\n              <Form />\n            </Grid>\n            <Grid item xs={12} sm={7}>\n              <Posts />\n            </Grid>\n          </Grid>\n        </Container>\n      </Grow>\n    </Container>\n  );\n};\n\nexport default App;","/workspace/project_mern_memories/client/src/components/form/form.js",["76","77"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TextField, Button, Typography, Paper, Select, InputLabel, MenuItem } from '@material-ui/core';\nimport pageStyles from './css';\nimport styled from 'styled-components'\nimport { createEmployee } from '../../actions/employees';\n\nconst StyledButton = styled(({...rest}) => (\n  <Button classes={{label: 'label'}} {...rest}/>\n))`\n  background: transparent;\n  border-radius: 3px;\n  width: 100%;\n  padding: 20px;\n  margin-bottom: 10px;\n  color: #5600ff;\n  border: 3px solid;\n  &:hover {\n    background-color: #5600ff;\n    color: #fff;\n`\n\n\nconst Form = () => {\n\n\n  const [employeeData, setEmployeeData] = useState({ name: '', dateOfBirth: '', gender: '', salary: '', speciality: ''});\n//   const employee = useSelector((state) => (currentId ? state.employees.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = pageStyles();\n\n//   useEffect(() => {\n//     if (employee) setEmployeeData(employee);\n//   }, [employee]);\n\n \n  const clear = () => {\n    // setCurrentId(0);\n    setEmployeeData({ name: '', dateOfBirth: '', gender: '', salary: '', speciality: '' });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n      dispatch(createEmployee(employeeData));\n    //   clear();\n    //   dispatch(updateEmployee(currentId, employeeData));\n    //   clear();\n  };\n\n    return (\n            <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">Creating a New Employee</Typography>\n        <TextField name=\"name\" variant=\"outlined\" label=\"name\" fullWidth value={employeeData.name} onChange={(e) => setEmployeeData({ ...employeeData, name: e.target.value })} />\n        <TextField name=\"title\" variant=\"outlined\" label=\"Date Of birth\" fullWidth value={employeeData.dateOfBirth} onChange={(e) => setEmployeeData({ ...employeeData, dateOfBirth: e.target.value })} />  \n        <InputLabel id=\"gender-outlined-label\">Gender</InputLabel>\n        <Select\n          labelId=\"gender-outlined-label\"\n          id=\"demo-simple-select\"\n          variant=\"outlined\"\n          fullWidth\n         value={employeeData.gender}\n         onChange={(e) => setEmployeeData({ ...employeeData, gender: e.target.value })}\n        >\n          <MenuItem value={\"Male\"}>Male</MenuItem>\n          <MenuItem value={\"Female\"}>Female</MenuItem>\n        </Select>\n\n        <TextField name=\"Salary\" variant=\"outlined\" label=\"Salary\" fullWidth value={employeeData.salary} onChange={(e) => setEmployeeData({ ...employeeData, salary: e.target.value })} />\n        <TextField name=\"speciality\" variant=\"outlined\" label=\"speciality (coma separated)\" fullWidth value={employeeData.speciality} onChange={(e) => setEmployeeData({ ...employeeData, speciality: e.target.value.split(',') })} />\n        <StyledButton className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</StyledButton>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n    )\n}\n\nexport default Form;","/workspace/project_mern_memories/client/src/components/employees/employees.js",["78"],"import react from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport Employee from './employee/employee';\nimport { useSelector } from 'react-redux';\nimport pageStyles from './css';\n\nconst Employees = () => {\n\nconst employees = useSelector((state) => state.employees);\nconsole.log(employees);\nconst classes = pageStyles();\n\n    return (\n       !employees.length ? <CircularProgress /> : (\n      <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n        {employees.map((employee) => (\n          <Grid key={employee._id} item xs={12} sm={6} md={6}>\n            <Employee employee={employee} />\n            <Employee employee={employee} />\n            <Employee employee={employee} />\n            <Employee employee={employee} />\n          </Grid>\n       ))}\n      </Grid>\n       )\n    )\n}\n\nexport default Employees;","/workspace/project_mern_memories/client/src/components/employees/employee/employee.js",["79"],"import react from 'react';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core/';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useDispatch } from 'react-redux';\nimport { deleteEmployee } from '../../../actions/employees';\nimport pageStyles from './css';\n\nconst Employee = ( {employee} ) => {\n   const dispatch = useDispatch();\n    const classes = pageStyles();\n\n    return (\n        <Card className={classes.card}>\n      <CardMedia className={classes.media} image={ 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} />\n      <div className={classes.overlay}>\n        <Typography variant=\"h6\">Hello</Typography>\n        <Typography variant=\"body2\">23/12</Typography>\n      </div>\n      <div className={classes.overlay2}>\n        {/* <Button style={{ color: 'white' }} size=\"small\" onClick={() => setCurrentId(employee._id)}><MoreHorizIcon fontSize=\"default\" /></Button> */}\n      </div>\n      <div className={classes.details}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">#css</Typography>\n      </div>\n      <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">NTNAE</Typography>\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">FGER</Typography>\n      </CardContent>\n      <CardActions className={classes.cardActions}>\n        <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deleteEmployee(employee._id))}><DeleteIcon fontSize=\"small\" /> Delete</Button>\n      </CardActions>\n    </Card>\n    )\n}\n\nexport default Employee;","/workspace/project_mern_memories/client/src/styles.js",[],"/workspace/project_mern_memories/client/src/components/form/css.js",[],"/workspace/project_mern_memories/client/src/components/employees/css.js",[],"/workspace/project_mern_memories/client/src/components/employees/employee/css.js",[],"/workspace/project_mern_memories/client/src/reducers/employees.js",["80"],"/workspace/project_mern_memories/client/src/actions/employees.js",["81"],"// import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nimport { createAction } from '../Utilities'\n\nimport * as api from '../api/index.js';\n\nexport const getEmployees = () => async (dispatch) => {\n  try {\n    const { data } = await api.fetchEmployees();\n\n    dispatch({ type: 'FETCH_ALL', payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const createEmployee = (employee) => async (dispatch) => {\n  try {\n    const { data } = await api.createEmployee(employee);\n\n    dispatch({ type: 'CREATE', payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const updateEmployee = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updateEmployee(id, post);\n\n    dispatch({ type: 'UPDATE', payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n\nexport const deleteEmployee = (id) => async (dispatch) => {\n  try {\n    await await api.deleteEmployee(id);\n\n    dispatch({ type: 'DELETE', payload: id });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","/workspace/project_mern_memories/client/src/api/index.js",[],"/workspace/project_mern_memories/client/src/reducers/index.js",[],"/workspace/project_mern_memories/client/src/Utilities.js",[],"/workspace/project_mern_memories/client/src/rootSaga.js",[],"/workspace/project_mern_memories/client/src/sagas.js",["82","83","84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":8,"column":10,"nodeType":"91","messageId":"92","endLine":8,"endColumn":22},{"ruleId":"89","severity":1,"message":"93","line":16,"column":7,"nodeType":"91","messageId":"92","endLine":16,"endColumn":15},{"ruleId":"89","severity":1,"message":"94","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":36},{"ruleId":"89","severity":1,"message":"95","line":2,"column":23,"nodeType":"91","messageId":"92","endLine":2,"endColumn":34},{"ruleId":"89","severity":1,"message":"96","line":1,"column":8,"nodeType":"91","messageId":"92","endLine":1,"endColumn":13},{"ruleId":"89","severity":1,"message":"96","line":1,"column":8,"nodeType":"91","messageId":"92","endLine":1,"endColumn":13},{"ruleId":"97","severity":1,"message":"98","line":5,"column":1,"nodeType":"99","endLine":18,"endColumn":3},{"ruleId":"89","severity":1,"message":"100","line":2,"column":10,"nodeType":"91","messageId":"92","endLine":2,"endColumn":22},{"ruleId":"89","severity":1,"message":"101","line":14,"column":11,"nodeType":"91","messageId":"92","endLine":14,"endColumn":26},{"ruleId":"97","severity":1,"message":"102","line":25,"column":1,"nodeType":"99","endLine":29,"endColumn":2},{"ruleId":"103","severity":2,"message":"104","line":27,"column":16,"nodeType":"91","messageId":"105","endLine":27,"endColumn":21},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'getEmployees' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'react' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'createAction' is defined but never used.","'getEmployeeData' is defined but never used.","Unexpected default export of anonymous function","no-undef","'types' is not defined.","undef","no-global-assign","no-unsafe-negation"]