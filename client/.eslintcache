[{"/workspace/project_mern_memories/client/src/index.js":"1","/workspace/project_mern_memories/client/src/app.js":"2","/workspace/project_mern_memories/client/src/components/form/form.js":"3","/workspace/project_mern_memories/client/src/components/employees/employees.js":"4","/workspace/project_mern_memories/client/src/components/employees/employee/employee.js":"5","/workspace/project_mern_memories/client/src/styles.js":"6","/workspace/project_mern_memories/client/src/components/form/css.js":"7","/workspace/project_mern_memories/client/src/components/employees/css.js":"8","/workspace/project_mern_memories/client/src/components/employees/employee/css.js":"9","/workspace/project_mern_memories/client/src/reducers/employees.js":"10","/workspace/project_mern_memories/client/src/actions/employees.js":"11","/workspace/project_mern_memories/client/src/api/index.js":"12","/workspace/project_mern_memories/client/src/reducers/index.js":"13","/workspace/project_mern_memories/client/src/Utilities.js":"14","/workspace/project_mern_memories/client/src/rootSaga.js":"15","/workspace/project_mern_memories/client/src/sagas.js":"16"},{"size":710,"mtime":1607682178000,"results":"17","hashOfConfig":"18"},{"size":1258,"mtime":1607700395333,"results":"19","hashOfConfig":"18"},{"size":3260,"mtime":1606897802089,"results":"20","hashOfConfig":"18"},{"size":892,"mtime":1607700884943,"results":"21","hashOfConfig":"18"},{"size":1663,"mtime":1607701232216,"results":"22","hashOfConfig":"18"},{"size":350,"mtime":1606654250500,"results":"23","hashOfConfig":"18"},{"size":364,"mtime":1606896314000,"results":"24","hashOfConfig":"18"},{"size":265,"mtime":1606654662000,"results":"25","hashOfConfig":"18"},{"size":962,"mtime":1606654758000,"results":"26","hashOfConfig":"18"},{"size":650,"mtime":1607704052396,"results":"27","hashOfConfig":"18"},{"size":1096,"mtime":1607158969000,"results":"28","hashOfConfig":"18"},{"size":376,"mtime":1607698030057,"results":"29","hashOfConfig":"18"},{"size":135,"mtime":1606655702014,"results":"30","hashOfConfig":"18"},{"size":683,"mtime":1607155888000,"results":"31","hashOfConfig":"18"},{"size":164,"mtime":1607159393000,"results":"32","hashOfConfig":"18"},{"size":835,"mtime":1607683310439,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bqnuqy",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/workspace/project_mern_memories/client/src/index.js",[],"/workspace/project_mern_memories/client/src/app.js",["68"],"/workspace/project_mern_memories/client/src/components/form/form.js",["69","70"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TextField, Button, Typography, Paper, Select, InputLabel, MenuItem } from '@material-ui/core';\nimport pageStyles from './css';\nimport styled from 'styled-components'\nimport { createEmployee } from '../../actions/employees';\n\nconst StyledButton = styled(({...rest}) => (\n  <Button classes={{label: 'label'}} {...rest}/>\n))`\n  background: transparent;\n  border-radius: 3px;\n  width: 100%;\n  padding: 20px;\n  margin-bottom: 10px;\n  color: #5600ff;\n  border: 3px solid;\n  &:hover {\n    background-color: #5600ff;\n    color: #fff;\n`\n\n\nconst Form = () => {\n\n\n  const [employeeData, setEmployeeData] = useState({ name: '', dateOfBirth: '', gender: '', salary: '', speciality: ''});\n//   const employee = useSelector((state) => (currentId ? state.employees.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = pageStyles();\n\n//   useEffect(() => {\n//     if (employee) setEmployeeData(employee);\n//   }, [employee]);\n\n \n  const clear = () => {\n    // setCurrentId(0);\n    setEmployeeData({ name: '', dateOfBirth: '', gender: '', salary: '', speciality: '' });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n      dispatch(createEmployee(employeeData));\n    //   clear();\n    //   dispatch(updateEmployee(currentId, employeeData));\n    //   clear();\n  };\n\n    return (\n            <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">Creating a New Employee</Typography>\n        <TextField name=\"name\" variant=\"outlined\" label=\"name\" fullWidth value={employeeData.name} onChange={(e) => setEmployeeData({ ...employeeData, name: e.target.value })} />\n        <TextField name=\"title\" variant=\"outlined\" label=\"Date Of birth\" fullWidth value={employeeData.dateOfBirth} onChange={(e) => setEmployeeData({ ...employeeData, dateOfBirth: e.target.value })} />  \n        <InputLabel id=\"gender-outlined-label\">Gender</InputLabel>\n        <Select\n          labelId=\"gender-outlined-label\"\n          id=\"demo-simple-select\"\n          variant=\"outlined\"\n          fullWidth\n         value={employeeData.gender}\n         onChange={(e) => setEmployeeData({ ...employeeData, gender: e.target.value })}\n        >\n          <MenuItem value={\"Male\"}>Male</MenuItem>\n          <MenuItem value={\"Female\"}>Female</MenuItem>\n        </Select>\n\n        <TextField name=\"Salary\" variant=\"outlined\" label=\"Salary\" fullWidth value={employeeData.salary} onChange={(e) => setEmployeeData({ ...employeeData, salary: e.target.value })} />\n        <TextField name=\"speciality\" variant=\"outlined\" label=\"speciality (coma separated)\" fullWidth value={employeeData.speciality} onChange={(e) => setEmployeeData({ ...employeeData, speciality: e.target.value.split(',') })} />\n        <StyledButton className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</StyledButton>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n    )\n}\n\nexport default Form;","/workspace/project_mern_memories/client/src/components/employees/employees.js",["71"],"/workspace/project_mern_memories/client/src/components/employees/employee/employee.js",["72"],"/workspace/project_mern_memories/client/src/styles.js",[],"/workspace/project_mern_memories/client/src/components/form/css.js",[],"/workspace/project_mern_memories/client/src/components/employees/css.js",[],"/workspace/project_mern_memories/client/src/components/employees/employee/css.js",[],"/workspace/project_mern_memories/client/src/reducers/employees.js",["73"],"/workspace/project_mern_memories/client/src/actions/employees.js",["74"],"// import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nimport { createAction } from '../Utilities'\n\nimport * as api from '../api/index.js';\n\nexport const getEmployees = () => async (dispatch) => {\n  try {\n    const { data } = await api.fetchEmployees();\n\n    dispatch({ type: 'FETCH_ALL', payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const createEmployee = (employee) => async (dispatch) => {\n  try {\n    const { data } = await api.createEmployee(employee);\n\n    dispatch({ type: 'CREATE', payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const updateEmployee = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updateEmployee(id, post);\n\n    dispatch({ type: 'UPDATE', payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n\nexport const deleteEmployee = (id) => async (dispatch) => {\n  try {\n    await await api.deleteEmployee(id);\n\n    dispatch({ type: 'DELETE', payload: id });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","/workspace/project_mern_memories/client/src/api/index.js",[],"/workspace/project_mern_memories/client/src/reducers/index.js",[],"/workspace/project_mern_memories/client/src/Utilities.js",[],"/workspace/project_mern_memories/client/src/rootSaga.js",[],"/workspace/project_mern_memories/client/src/sagas.js",["75","76","77","78","79"],{"ruleId":"80","severity":1,"message":"81","line":1,"column":10,"nodeType":"82","messageId":"83","endLine":1,"endColumn":18},{"ruleId":"80","severity":1,"message":"84","line":1,"column":27,"nodeType":"82","messageId":"83","endLine":1,"endColumn":36},{"ruleId":"80","severity":1,"message":"85","line":2,"column":23,"nodeType":"82","messageId":"83","endLine":2,"endColumn":34},{"ruleId":"80","severity":1,"message":"86","line":1,"column":8,"nodeType":"82","messageId":"83","endLine":1,"endColumn":13},{"ruleId":"80","severity":1,"message":"86","line":1,"column":8,"nodeType":"82","messageId":"83","endLine":1,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":5,"column":1,"nodeType":"89","endLine":18,"endColumn":3},{"ruleId":"80","severity":1,"message":"90","line":2,"column":10,"nodeType":"82","messageId":"83","endLine":2,"endColumn":22},{"ruleId":"80","severity":1,"message":"91","line":5,"column":10,"nodeType":"82","messageId":"83","endLine":5,"endColumn":13},{"ruleId":"80","severity":1,"message":"92","line":5,"column":26,"nodeType":"82","messageId":"83","endLine":5,"endColumn":36},{"ruleId":"80","severity":1,"message":"93","line":18,"column":11,"nodeType":"82","messageId":"83","endLine":18,"endColumn":20},{"ruleId":"94","severity":1,"message":"95","line":26,"column":8,"nodeType":"96","messageId":"97","endLine":28,"endColumn":2},{"ruleId":"87","severity":1,"message":"98","line":32,"column":1,"nodeType":"89","endLine":34,"endColumn":2},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'react' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'createAction' is defined but never used.","'all' is defined but never used.","'takeLatest' is defined but never used.","'employees' is assigned a value but never used.","require-yield","This generator function does not have 'yield'.","FunctionDeclaration","missingYield","Unexpected default export of anonymous function"]